// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using easy_hotel_backend;

namespace easyhotelbackend.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20181205012343_quarto")]
    partial class quarto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("easy_hotel_backend.Models.Comentario", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Avaliacao");

                    b.Property<int>("QuartoId");

                    b.Property<string>("Texto");

                    b.Property<int>("UsuarioId");

                    b.Property<DateTime>("data");

                    b.HasKey("ComentarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("easy_hotel_backend.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avaliacao");

                    b.Property<string>("Cidade");

                    b.Property<string>("Descricao");

                    b.Property<string>("Email");

                    b.Property<string>("Estado");

                    b.Property<int>("ImagemId");

                    b.Property<string>("Nome");

                    b.HasKey("HotelId");

                    b.HasIndex("ImagemId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("easy_hotel_backend.Models.Imagem", b =>
                {
                    b.Property<int>("ImagemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<string>("Url");

                    b.HasKey("ImagemId");

                    b.ToTable("Imagem");
                });

            modelBuilder.Entity("easy_hotel_backend.Models.Quarto", b =>
                {
                    b.Property<int>("QuartoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AvaliacaoQuarto");

                    b.Property<string>("Descricao");

                    b.Property<int>("HotelId");

                    b.Property<string>("TipoQuarto");

                    b.Property<double>("Valor");

                    b.HasKey("QuartoId");

                    b.HasIndex("HotelId");

                    b.ToTable("Quarto");
                });

            modelBuilder.Entity("easy_hotel_backend.Models.QuartoImagem", b =>
                {
                    b.Property<int>("QuartoImagemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ImagemId");

                    b.Property<int>("QuartoId");

                    b.HasKey("QuartoImagemId");

                    b.HasIndex("ImagemId");

                    b.HasIndex("QuartoId");

                    b.ToTable("QuartoImagem");
                });

            modelBuilder.Entity("easy_hotel_backend.Models.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataFim");

                    b.Property<DateTime>("DataInicio");

                    b.Property<int>("QuartoId");

                    b.Property<int>("UsuarioId");

                    b.Property<double>("Valor");

                    b.HasKey("ReservaId");

                    b.HasIndex("QuartoId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("easy_hotel_backend.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("easy_hotel_backend.Models.Comentario", b =>
                {
                    b.HasOne("easy_hotel_backend.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("easy_hotel_backend.Models.Hotel", b =>
                {
                    b.HasOne("easy_hotel_backend.Models.Imagem", "imagem")
                        .WithMany()
                        .HasForeignKey("ImagemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("easy_hotel_backend.Models.Quarto", b =>
                {
                    b.HasOne("easy_hotel_backend.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("easy_hotel_backend.Models.QuartoImagem", b =>
                {
                    b.HasOne("easy_hotel_backend.Models.Imagem", "Imagem")
                        .WithMany()
                        .HasForeignKey("ImagemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("easy_hotel_backend.Models.Quarto")
                        .WithMany("QuartoImagems")
                        .HasForeignKey("QuartoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("easy_hotel_backend.Models.Reserva", b =>
                {
                    b.HasOne("easy_hotel_backend.Models.Quarto", "quarto")
                        .WithMany()
                        .HasForeignKey("QuartoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
